/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
allprojects({
    group('org.clour')
    version('1.0.1')

//    ext({
//        javaVersion = '1.8'
//        springBootVar = '1.5.15.RELEASE'
//        springCloudVar = '1.4.4.RELEASE'
//        lombokVersion = '1.16.20'
//    })

    buildscript({
        repositories({
            mavenLocal()
            maven({url("http://localhost:8081/repository/maven-public/")})
            mavenCentral()
            jcenter()
        })
        
        dependencies({
            classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVar")
           })
    })

    apply(plugin:'java')
    apply(plugin:'eclipse')
    apply(plugin:'maven')

    // JVM 版本号要求
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'

    repositories({
        mavenLocal()
        maven({url("http://localhost:8081/repository/maven-public/")})
        mavenCentral()
        jcenter()
    })
    
    dependencies({
        // spring boot
        compile("org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVar")
        compile("org.springframework.boot:spring-boot-starter-freemarker:$springBootVar")
        compile("org.springframework.boot:spring-boot-configuration-processor:$springBootVar")
        compile("org.springframework.boot:spring-boot-starter-actuator:$springBootVar")
        compile("org.springframework.spring-cloud-starter-netflix-eureka-client:$springCloudVar")
        compile("org.springframework.cloud:spring-cloud-starter-config:$springCloudVar")
        compile("org.projectlombok:lombok:$lombokVersion")
        testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVar")
    })

})